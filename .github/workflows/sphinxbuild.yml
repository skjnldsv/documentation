name: "Build documentation"

on:
  pull_request:
  push:
    branches:
      - master
      - stable*

jobs:
  build:
    name: Build ${{ matrix.manual.name }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        manual:
          - name: "user_manual"
            directory: "user_manual"
            make_target: "html"
            build_path: "_build/html"
            publish: true
            
          - name: "user_manual-en"
            directory: "user_manual"
            make_target: "html-lang-en"
            build_path: "_build/html"
            publish: false
            
          - name: "developer_manual"
            directory: "developer_manual"
            make_target: "html"
            build_path: "_build/html/com"
            publish: true
            
          - name: "admin_manual"
            directory: "admin_manual"
            make_target: "html"
            build_path: "_build/html/com"
            publish: true

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install pip dependencies
      run: pip install -r requirements.txt

    - name: Build using Makefile
      run: cd ${{ matrix.manual.directory }} && make ${{ matrix.manual.make_target }}

    - name: Upload static documentation
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      if: ${{ matrix.manual.publish }}
      with:
        name: ${{ matrix.manual.name }}
        path: ${{ matrix.manual.directory }}/${{ matrix.manual.build_path }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  # Only deploy on push, not PR
    
    permissions:
      contents: write

    steps:
    - name: Checkout Github Pages branch
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        ref: gh-pages
        fetch-depth: 0
        
    - name: Download all ${{ needs.build.outputs.branch_name }} artifacts
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      with:
        path: artifacts/

    - name: Get branch name
      id: branch
      run: |
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          echo "branch_name=pr-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
        else
          echo "branch_name=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
        fi

    - name: Merge documentation
      run: |
        # List artifacts
        ls -la artifacts/*/

        # Cleanup old documentation
        rm -rf ${{ steps.branch.outputs.branch_name }}
        mkdir -p ${{ steps.branch.outputs.branch_name }}

        # Copy all built documentation
        for artifact in artifacts/; do
          if [ -d "$artifact" ]; then
            cp -r "$artifact/" ${{ steps.branch.outputs.branch_name }}
          fi
        done

    - name: Commit and push to gh-pages
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add ${{ steps.branch.outputs.branch_name }}
        git diff --staged --quiet || git commit -m "chore: deploy documentation for ${{ steps.branch.outputs.branch_name }}"
        git push origin gh-pages
