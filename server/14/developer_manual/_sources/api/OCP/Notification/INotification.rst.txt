.. rst-class:: phpdoctorst

.. role:: php(code)
	:language: php


INotification
=============


.. php:namespace:: OCP\Notification

.. php:interface:: INotification


	.. rst-class:: phpdoc-description
	
		| Interface INotification
		
	
	:Implemented by:
		:php:class:`OC\\Notification\\Notification` 
	
	
	:Source:
		`lib/public/Notification/INotification.php#34 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L34>`_
	

Methods
-------

.. rst-class:: public

	.. php:method:: public setApp( $app)
	
		:Source:
			`lib/public/Notification/INotification.php#41 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L41>`_
		
		
		:Parameters:
			* **$app** (string)  

		
		:Returns: $this 
		:Throws: :any:`\\InvalidArgumentException <InvalidArgumentException>` if the app id is invalid
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getApp()
	
		:Source:
			`lib/public/Notification/INotification.php#47 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L47>`_
		
		
		:Returns: string 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public setUser( $user)
	
		:Source:
			`lib/public/Notification/INotification.php#55 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L55>`_
		
		
		:Parameters:
			* **$user** (string)  

		
		:Returns: $this 
		:Throws: :any:`\\InvalidArgumentException <InvalidArgumentException>` if the user id is invalid
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getUser()
	
		:Source:
			`lib/public/Notification/INotification.php#61 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L61>`_
		
		
		:Returns: string 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public setDateTime( $dateTime)
	
		:Source:
			`lib/public/Notification/INotification.php#69 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L69>`_
		
		
		:Parameters:
			* **$dateTime** (:any:`DateTime <DateTime>`)  

		
		:Returns: $this 
		:Throws: :any:`\\InvalidArgumentException <InvalidArgumentException>` if the $dateTime is invalid
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getDateTime()
	
		:Source:
			`lib/public/Notification/INotification.php#75 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L75>`_
		
		
		:Returns: :any:`\\DateTime <DateTime>` 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public setObject( $type, $id)
	
		:Source:
			`lib/public/Notification/INotification.php#84 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L84>`_
		
		
		:Parameters:
			* **$type** (string)  
			* **$id** (string)  

		
		:Returns: $this 
		:Throws: :any:`\\InvalidArgumentException <InvalidArgumentException>` if the object type or id is invalid
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getObjectType()
	
		:Source:
			`lib/public/Notification/INotification.php#90 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L90>`_
		
		
		:Returns: string 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getObjectId()
	
		:Source:
			`lib/public/Notification/INotification.php#96 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L96>`_
		
		
		:Returns: string 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public setSubject( $subject, $parameters=\[\])
	
		:Source:
			`lib/public/Notification/INotification.php#105 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L105>`_
		
		
		:Parameters:
			* **$subject** (string)  
			* **$parameters** (array)  

		
		:Returns: $this 
		:Throws: :any:`\\InvalidArgumentException <InvalidArgumentException>` if the subject or parameters are invalid
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getSubject()
	
		:Source:
			`lib/public/Notification/INotification.php#111 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L111>`_
		
		
		:Returns: string 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getSubjectParameters()
	
		:Source:
			`lib/public/Notification/INotification.php#117 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L117>`_
		
		
		:Returns: array 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public setParsedSubject( $subject)
	
		.. rst-class:: phpdoc-description
		
			| Set a parsed subject
			
			| HTML is not allowed in the parsed subject and will be escaped
			| automatically by the clients\. You can use the RichObjectString system
			| provided by the Nextcloud server to highlight important parameters via
			| the setRichSubject method, but make sure, that a plain text message is
			| always set via setParsedSubject, to support clients which can not handle
			| rich strings\.
			| 
			| See https://github\.com/nextcloud/server/issues/1706 for more information\.
			
		
		:Source:
			`lib/public/Notification/INotification.php#136 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L136>`_
		
		
		:Parameters:
			* **$subject** (string)  

		
		:Returns: $this 
		:Throws: :any:`\\InvalidArgumentException <InvalidArgumentException>` if the subject is invalid
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getParsedSubject()
	
		:Source:
			`lib/public/Notification/INotification.php#142 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L142>`_
		
		
		:Returns: string 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public setRichSubject( $subject, $parameters=\[\])
	
		.. rst-class:: phpdoc-description
		
			| Set a RichObjectString subject
			
			| HTML is not allowed in the rich subject and will be escaped automatically
			| by the clients, but you can use the RichObjectString system provided by
			| the Nextcloud server to highlight important parameters\.
			| Also make sure, that a plain text subject is always set via
			| setParsedSubject, to support clients which can not handle rich strings\.
			| 
			| See https://github\.com/nextcloud/server/issues/1706 for more information\.
			
		
		:Source:
			`lib/public/Notification/INotification.php#161 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L161>`_
		
		
		:Parameters:
			* **$subject** (string)  
			* **$parameters** (array)  

		
		:Returns: $this 
		:Throws: :any:`\\InvalidArgumentException <InvalidArgumentException>` if the subject or parameters are invalid
		:Since: 11.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getRichSubject()
	
		:Source:
			`lib/public/Notification/INotification.php#167 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L167>`_
		
		
		:Returns: string 
		:Since: 11.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getRichSubjectParameters()
	
		:Source:
			`lib/public/Notification/INotification.php#173 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L173>`_
		
		
		:Returns: array[] 
		:Since: 11.0.0 
	
	

.. rst-class:: public

	.. php:method:: public setMessage( $message, $parameters=\[\])
	
		:Source:
			`lib/public/Notification/INotification.php#182 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L182>`_
		
		
		:Parameters:
			* **$message** (string)  
			* **$parameters** (array)  

		
		:Returns: $this 
		:Throws: :any:`\\InvalidArgumentException <InvalidArgumentException>` if the message or parameters are invalid
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getMessage()
	
		:Source:
			`lib/public/Notification/INotification.php#188 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L188>`_
		
		
		:Returns: string 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getMessageParameters()
	
		:Source:
			`lib/public/Notification/INotification.php#194 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L194>`_
		
		
		:Returns: array 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public setParsedMessage( $message)
	
		.. rst-class:: phpdoc-description
		
			| Set a parsed message
			
			| HTML is not allowed in the parsed message and will be escaped
			| automatically by the clients\. You can use the RichObjectString system
			| provided by the Nextcloud server to highlight important parameters via
			| the setRichMessage method, but make sure, that a plain text message is
			| always set via setParsedMessage, to support clients which can not handle
			| rich strings\.
			| 
			| See https://github\.com/nextcloud/server/issues/1706 for more information\.
			
		
		:Source:
			`lib/public/Notification/INotification.php#213 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L213>`_
		
		
		:Parameters:
			* **$message** (string)  

		
		:Returns: $this 
		:Throws: :any:`\\InvalidArgumentException <InvalidArgumentException>` if the message is invalid
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getParsedMessage()
	
		:Source:
			`lib/public/Notification/INotification.php#219 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L219>`_
		
		
		:Returns: string 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public setRichMessage( $message, $parameters=\[\])
	
		.. rst-class:: phpdoc-description
		
			| Set a RichObjectString message
			
			| HTML is not allowed in the rich message and will be escaped automatically
			| by the clients, but you can use the RichObjectString system provided by
			| the Nextcloud server to highlight important parameters\.
			| Also make sure, that a plain text message is always set via
			| setParsedMessage, to support clients which can not handle rich strings\.
			| 
			| See https://github\.com/nextcloud/server/issues/1706 for more information\.
			
		
		:Source:
			`lib/public/Notification/INotification.php#238 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L238>`_
		
		
		:Parameters:
			* **$message** (string)  
			* **$parameters** (array)  

		
		:Returns: $this 
		:Throws: :any:`\\InvalidArgumentException <InvalidArgumentException>` if the message or parameters are invalid
		:Since: 11.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getRichMessage()
	
		:Source:
			`lib/public/Notification/INotification.php#244 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L244>`_
		
		
		:Returns: string 
		:Since: 11.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getRichMessageParameters()
	
		:Source:
			`lib/public/Notification/INotification.php#250 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L250>`_
		
		
		:Returns: array[] 
		:Since: 11.0.0 
	
	

.. rst-class:: public

	.. php:method:: public setLink( $link)
	
		:Source:
			`lib/public/Notification/INotification.php#258 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L258>`_
		
		
		:Parameters:
			* **$link** (string)  

		
		:Returns: $this 
		:Throws: :any:`\\InvalidArgumentException <InvalidArgumentException>` if the link is invalid
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getLink()
	
		:Source:
			`lib/public/Notification/INotification.php#264 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L264>`_
		
		
		:Returns: string 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public setIcon( $icon)
	
		:Source:
			`lib/public/Notification/INotification.php#272 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L272>`_
		
		
		:Parameters:
			* **$icon** (string)  

		
		:Returns: $this 
		:Throws: :any:`\\InvalidArgumentException <InvalidArgumentException>` if the icon is invalid
		:Since: 11.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getIcon()
	
		:Source:
			`lib/public/Notification/INotification.php#278 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L278>`_
		
		
		:Returns: string 
		:Since: 11.0.0 
	
	

.. rst-class:: public

	.. php:method:: public createAction()
	
		:Source:
			`lib/public/Notification/INotification.php#284 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L284>`_
		
		
		:Returns: :any:`\\OCP\\Notification\\IAction <OCP\\Notification\\IAction>` 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public addAction( $action)
	
		:Source:
			`lib/public/Notification/INotification.php#292 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L292>`_
		
		
		:Parameters:
			* **$action** (:any:`OCP\\Notification\\IAction <OCP\\Notification\\IAction>`)  

		
		:Returns: $this 
		:Throws: :any:`\\InvalidArgumentException <InvalidArgumentException>` if the action is invalid
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getActions()
	
		:Source:
			`lib/public/Notification/INotification.php#298 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L298>`_
		
		
		:Returns: :any:`\\OCP\\Notification\\IAction\[\] <OCP\\Notification\\IAction>` 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public addParsedAction( $action)
	
		:Source:
			`lib/public/Notification/INotification.php#306 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L306>`_
		
		
		:Parameters:
			* **$action** (:any:`OCP\\Notification\\IAction <OCP\\Notification\\IAction>`)  

		
		:Returns: $this 
		:Throws: :any:`\\InvalidArgumentException <InvalidArgumentException>` if the action is invalid
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getParsedActions()
	
		:Source:
			`lib/public/Notification/INotification.php#312 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L312>`_
		
		
		:Returns: :any:`\\OCP\\Notification\\IAction\[\] <OCP\\Notification\\IAction>` 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public isValid()
	
		:Source:
			`lib/public/Notification/INotification.php#318 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L318>`_
		
		
		:Returns: bool 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public isValidParsed()
	
		:Source:
			`lib/public/Notification/INotification.php#324 <https://github.com/nextcloud/server/blob/stable13/lib/public/Notification/INotification.php#L324>`_
		
		
		:Returns: bool 
		:Since: 9.0.0 
	
	

