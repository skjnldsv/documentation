.. rst-class:: phpdoctorst

.. role:: php(code)
	:language: php


PgSqlExpressionBuilder
======================


.. php:namespace:: OC\DB\QueryBuilder\ExpressionBuilder

.. php:class:: PgSqlExpressionBuilder


	:Source:
		`lib/private/DB/QueryBuilder/ExpressionBuilder/PgSqlExpressionBuilder.php#31 <https://github.com/nextcloud/server/blob/stable13/lib/private/DB/QueryBuilder/ExpressionBuilder/PgSqlExpressionBuilder.php#L31>`_
	
	:Parent:
		:php:class:`OC\\DB\\QueryBuilder\\ExpressionBuilder\\ExpressionBuilder`
	

Methods
-------

.. rst-class:: public

	.. php:method:: public castColumn( $column, $type)
	
		.. rst-class:: phpdoc-description
		
			| Returns a IQueryFunction that casts the column to the given type
			
		
		:Source:
			`lib/private/DB/QueryBuilder/ExpressionBuilder/PgSqlExpressionBuilder.php#40 <https://github.com/nextcloud/server/blob/stable13/lib/private/DB/QueryBuilder/ExpressionBuilder/PgSqlExpressionBuilder.php#L40>`_
		
		
		:Parameters:
			* **$column** (string)  
			* **$type** (mixed)  One of IQueryBuilder::PARAM_*

		
		:Returns: :any:`\\OCP\\DB\\QueryBuilder\\IQueryFunction <OCP\\DB\\QueryBuilder\\IQueryFunction>` 
	
	

.. rst-class:: public

	.. php:method:: public iLike( $x, $y, $type=null)
	
		:Source:
			`lib/private/DB/QueryBuilder/ExpressionBuilder/PgSqlExpressionBuilder.php#54 <https://github.com/nextcloud/server/blob/stable13/lib/private/DB/QueryBuilder/ExpressionBuilder/PgSqlExpressionBuilder.php#L54>`_
		
		
	
	

