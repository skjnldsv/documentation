.. rst-class:: phpdoctorst

.. role:: php(code)
	:language: php


Client
======


.. php:namespace:: OC\Http\Client

.. php:class:: Client


	.. rst-class:: phpdoc-description
	
		| Class Client
		
	
	:Source:
		`lib/private/Http/Client/Client.php#50 <https://github.com/nextcloud/server/blob/stable13/lib/private/Http/Client/Client.php#L50>`_
	
	:Implements:
		:php:interface:`OCP\\Http\\Client\\IClient` 
	

Properties
----------

Methods
-------

.. rst-class:: public

	.. php:method:: public __construct( $config, $logger, $certificateManager, $client, $localAddressChecker)
	
		:Source:
			`lib/private/Http/Client/Client.php#62 <https://github.com/nextcloud/server/blob/stable13/lib/private/Http/Client/Client.php#L62>`_
		
		
	
	

.. rst-class:: protected

	.. php:method:: protected preventLocalAddress( $uri, $options)
	
		:Source:
			`lib/private/Http/Client/Client.php#185 <https://github.com/nextcloud/server/blob/stable13/lib/private/Http/Client/Client.php#L185>`_
		
		
	
	

.. rst-class:: public

	.. php:method:: public get( $uri, $options=\[\])
	
		.. rst-class:: phpdoc-description
		
			| Sends a GET request
			
		
		:Source:
			`lib/private/Http/Client/Client.php#222 <https://github.com/nextcloud/server/blob/stable13/lib/private/Http/Client/Client.php#L222>`_
		
		
		:Parameters:
			* **$uri** (string)  
			* **$options** (array)  Array such as
			'query' => [
			    'field' => 'abc',
			    'other_field' => '123',
			    'file_name' => fopen('/path/to/file', 'r'),
			],
			'headers' => [
			    'foo' => 'bar',
			],
			'cookies' => ['
			    'foo' => 'bar',
			],
			'allow_redirects' => [
			     'max'       => 10,  // allow at most 10 redirects.
			     'strict'    => true,     // use "strict" RFC compliant redirects.
			     'referer'   => true,     // add a Referer header
			     'protocols' => ['https'] // only allow https URLs
			],
			'sink' => '/path/to/file', // save to a file or a stream
			'verify' => true, // bool or string to CA file
			'debug' => true,
			'timeout' => 5,

		
		:Returns: :any:`\\OCP\\Http\\Client\\IResponse <OCP\\Http\\Client\\IResponse>` 
		:Throws: :any:`\\Exception <Exception>` If the request could not get completed
	
	

.. rst-class:: public

	.. php:method:: public head( $uri, $options=\[\])
	
		.. rst-class:: phpdoc-description
		
			| Sends a HEAD request
			
		
		:Source:
			`lib/private/Http/Client/Client.php#253 <https://github.com/nextcloud/server/blob/stable13/lib/private/Http/Client/Client.php#L253>`_
		
		
		:Parameters:
			* **$uri** (string)  
			* **$options** (array)  Array such as
			'headers' => [
			    'foo' => 'bar',
			],
			'cookies' => ['
			    'foo' => 'bar',
			],
			'allow_redirects' => [
			     'max'       => 10,  // allow at most 10 redirects.
			     'strict'    => true,     // use "strict" RFC compliant redirects.
			     'referer'   => true,     // add a Referer header
			     'protocols' => ['https'] // only allow https URLs
			],
			'sink' => '/path/to/file', // save to a file or a stream
			'verify' => true, // bool or string to CA file
			'debug' => true,
			'timeout' => 5,

		
		:Returns: :any:`\\OCP\\Http\\Client\\IResponse <OCP\\Http\\Client\\IResponse>` 
		:Throws: :any:`\\Exception <Exception>` If the request could not get completed
	
	

.. rst-class:: public

	.. php:method:: public post( $uri, $options=\[\])
	
		.. rst-class:: phpdoc-description
		
			| Sends a POST request
			
		
		:Source:
			`lib/private/Http/Client/Client.php#288 <https://github.com/nextcloud/server/blob/stable13/lib/private/Http/Client/Client.php#L288>`_
		
		
		:Parameters:
			* **$uri** (string)  
			* **$options** (array)  Array such as
			'body' => [
			    'field' => 'abc',
			    'other_field' => '123',
			    'file_name' => fopen('/path/to/file', 'r'),
			],
			'headers' => [
			    'foo' => 'bar',
			],
			'cookies' => ['
			    'foo' => 'bar',
			],
			'allow_redirects' => [
			     'max'       => 10,  // allow at most 10 redirects.
			     'strict'    => true,     // use "strict" RFC compliant redirects.
			     'referer'   => true,     // add a Referer header
			     'protocols' => ['https'] // only allow https URLs
			],
			'sink' => '/path/to/file', // save to a file or a stream
			'verify' => true, // bool or string to CA file
			'debug' => true,
			'timeout' => 5,

		
		:Returns: :any:`\\OCP\\Http\\Client\\IResponse <OCP\\Http\\Client\\IResponse>` 
		:Throws: :any:`\\Exception <Exception>` If the request could not get completed
	
	

.. rst-class:: public

	.. php:method:: public put( $uri, $options=\[\])
	
		.. rst-class:: phpdoc-description
		
			| Sends a PUT request
			
		
		:Source:
			`lib/private/Http/Client/Client.php#328 <https://github.com/nextcloud/server/blob/stable13/lib/private/Http/Client/Client.php#L328>`_
		
		
		:Parameters:
			* **$uri** (string)  
			* **$options** (array)  Array such as
			'body' => [
			    'field' => 'abc',
			    'other_field' => '123',
			    'file_name' => fopen('/path/to/file', 'r'),
			],
			'headers' => [
			    'foo' => 'bar',
			],
			'cookies' => ['
			    'foo' => 'bar',
			],
			'allow_redirects' => [
			     'max'       => 10,  // allow at most 10 redirects.
			     'strict'    => true,     // use "strict" RFC compliant redirects.
			     'referer'   => true,     // add a Referer header
			     'protocols' => ['https'] // only allow https URLs
			],
			'sink' => '/path/to/file', // save to a file or a stream
			'verify' => true, // bool or string to CA file
			'debug' => true,
			'timeout' => 5,

		
		:Returns: :any:`\\OCP\\Http\\Client\\IResponse <OCP\\Http\\Client\\IResponse>` 
		:Throws: :any:`\\Exception <Exception>` If the request could not get completed
	
	

.. rst-class:: public

	.. php:method:: public delete( $uri, $options=\[\])
	
		.. rst-class:: phpdoc-description
		
			| Sends a DELETE request
			
		
		:Source:
			`lib/private/Http/Client/Client.php#363 <https://github.com/nextcloud/server/blob/stable13/lib/private/Http/Client/Client.php#L363>`_
		
		
		:Parameters:
			* **$uri** (string)  
			* **$options** (array)  Array such as
			'body' => [
			    'field' => 'abc',
			    'other_field' => '123',
			    'file_name' => fopen('/path/to/file', 'r'),
			],
			'headers' => [
			    'foo' => 'bar',
			],
			'cookies' => ['
			    'foo' => 'bar',
			],
			'allow_redirects' => [
			     'max'       => 10,  // allow at most 10 redirects.
			     'strict'    => true,     // use "strict" RFC compliant redirects.
			     'referer'   => true,     // add a Referer header
			     'protocols' => ['https'] // only allow https URLs
			],
			'sink' => '/path/to/file', // save to a file or a stream
			'verify' => true, // bool or string to CA file
			'debug' => true,
			'timeout' => 5,

		
		:Returns: :any:`\\OCP\\Http\\Client\\IResponse <OCP\\Http\\Client\\IResponse>` 
		:Throws: :any:`\\Exception <Exception>` If the request could not get completed
	
	

.. rst-class:: public

	.. php:method:: public options( $uri, $options=\[\])
	
		.. rst-class:: phpdoc-description
		
			| Sends a options request
			
		
		:Source:
			`lib/private/Http/Client/Client.php#398 <https://github.com/nextcloud/server/blob/stable13/lib/private/Http/Client/Client.php#L398>`_
		
		
		:Parameters:
			* **$uri** (string)  
			* **$options** (array)  Array such as
			'body' => [
			    'field' => 'abc',
			    'other_field' => '123',
			    'file_name' => fopen('/path/to/file', 'r'),
			],
			'headers' => [
			    'foo' => 'bar',
			],
			'cookies' => ['
			    'foo' => 'bar',
			],
			'allow_redirects' => [
			     'max'       => 10,  // allow at most 10 redirects.
			     'strict'    => true,     // use "strict" RFC compliant redirects.
			     'referer'   => true,     // add a Referer header
			     'protocols' => ['https'] // only allow https URLs
			],
			'sink' => '/path/to/file', // save to a file or a stream
			'verify' => true, // bool or string to CA file
			'debug' => true,
			'timeout' => 5,

		
		:Returns: :any:`\\OCP\\Http\\Client\\IResponse <OCP\\Http\\Client\\IResponse>` 
		:Throws: :any:`\\Exception <Exception>` If the request could not get completed
	
	

