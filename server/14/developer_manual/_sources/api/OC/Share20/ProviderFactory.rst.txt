.. rst-class:: phpdoctorst

.. role:: php(code)
	:language: php


ProviderFactory
===============


.. php:namespace:: OC\Share20

.. php:class:: ProviderFactory


	.. rst-class:: phpdoc-description
	
		| Class ProviderFactory
		
	
	:Source:
		`lib/private/Share20/ProviderFactory.php#56 <https://github.com/nextcloud/server/blob/stable13/lib/private/Share20/ProviderFactory.php#L56>`_
	
	:Implements:
		:php:interface:`OCP\\Share\\IProviderFactory` 
	

Properties
----------

Methods
-------

.. rst-class:: public

	.. php:method:: public __construct( $serverContainer)
	
		.. rst-class:: phpdoc-description
		
			| IProviderFactory constructor\.
			
		
		:Source:
			`lib/private/Share20/ProviderFactory.php#82 <https://github.com/nextcloud/server/blob/stable13/lib/private/Share20/ProviderFactory.php#L82>`_
		
		
		:Parameters:
			* **$serverContainer** (:any:`OCP\\IServerContainer <OCP\\IServerContainer>`)  

		
	
	

.. rst-class:: public

	.. php:method:: public registerProvider( $shareProviderClass)
	
		:Source:
			`lib/private/Share20/ProviderFactory.php#86 <https://github.com/nextcloud/server/blob/stable13/lib/private/Share20/ProviderFactory.php#L86>`_
		
		
	
	

.. rst-class:: protected

	.. php:method:: protected defaultShareProvider()
	
		.. rst-class:: phpdoc-description
		
			| Create the default share provider\.
			
		
		:Source:
			`lib/private/Share20/ProviderFactory.php#95 <https://github.com/nextcloud/server/blob/stable13/lib/private/Share20/ProviderFactory.php#L95>`_
		
		
		:Returns: :any:`\\OC\\Share20\\DefaultShareProvider <OC\\Share20\\DefaultShareProvider>` 
	
	

.. rst-class:: protected

	.. php:method:: protected federatedShareProvider()
	
		.. rst-class:: phpdoc-description
		
			| Create the federated share provider
			
		
		:Source:
			`lib/private/Share20/ProviderFactory.php#118 <https://github.com/nextcloud/server/blob/stable13/lib/private/Share20/ProviderFactory.php#L118>`_
		
		
		:Returns: :any:`\\OCA\\FederatedFileSharing\\FederatedShareProvider <OCA\\FederatedFileSharing\\FederatedShareProvider>` 
	
	

.. rst-class:: protected

	.. php:method:: protected getShareByMailProvider()
	
		.. rst-class:: phpdoc-description
		
			| Create the federated share provider
			
		
		:Source:
			`lib/private/Share20/ProviderFactory.php#175 <https://github.com/nextcloud/server/blob/stable13/lib/private/Share20/ProviderFactory.php#L175>`_
		
		
		:Returns: :any:`\\OCA\\ShareByMail\\ShareByMailProvider <OCA\\ShareByMail\\ShareByMailProvider>` 
	
	

.. rst-class:: protected

	.. php:method:: protected getShareByCircleProvider()
	
		.. rst-class:: phpdoc-description
		
			| Create the circle share provider
			
		
		:Source:
			`lib/private/Share20/ProviderFactory.php#216 <https://github.com/nextcloud/server/blob/stable13/lib/private/Share20/ProviderFactory.php#L216>`_
		
		
		:Returns: :any:`\\OCA\\FederatedFileSharing\\FederatedShareProvider <OCA\\FederatedFileSharing\\FederatedShareProvider>` 
	
	

.. rst-class:: protected

	.. php:method:: protected getRoomShareProvider()
	
		.. rst-class:: phpdoc-description
		
			| Create the room share provider
			
		
		:Source:
			`lib/private/Share20/ProviderFactory.php#248 <https://github.com/nextcloud/server/blob/stable13/lib/private/Share20/ProviderFactory.php#L248>`_
		
		
		:Returns: :any:`\\OC\\Share20\\RoomShareProvider <OC\\Share20\\RoomShareProvider>` 
	
	

.. rst-class:: public

	.. php:method:: public getProvider( $id)
	
		:Source:
			`lib/private/Share20/ProviderFactory.php#271 <https://github.com/nextcloud/server/blob/stable13/lib/private/Share20/ProviderFactory.php#L271>`_
		
		
	
	

.. rst-class:: public

	.. php:method:: public getProviderForType( $shareType)
	
		:Source:
			`lib/private/Share20/ProviderFactory.php#309 <https://github.com/nextcloud/server/blob/stable13/lib/private/Share20/ProviderFactory.php#L309>`_
		
		
	
	

.. rst-class:: public

	.. php:method:: public getAllProviders()
	
		:Source:
			`lib/private/Share20/ProviderFactory.php#337 <https://github.com/nextcloud/server/blob/stable13/lib/private/Share20/ProviderFactory.php#L337>`_
		
		
	
	

