.. rst-class:: phpdoctorst

.. role:: php(code)
	:language: php


Wrapper
=======


.. php:namespace:: OC\Files\Storage\Wrapper

.. php:class:: Wrapper


	:Source:
		`lib/private/Files/Storage/Wrapper/Wrapper.php#41 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L41>`_
	
	:Implements:
		:php:interface:`OC\\Files\\Storage\\Storage` :php:interface:`OCP\\Files\\Storage\\ILockingStorage` :php:interface:`OCP\\Files\\Storage\\IWriteStreamStorage` 
	

Properties
----------

.. php:attr:: protected static storage

	:Source:
		`lib/private/Files/Storage/Wrapper/Wrapper.php#45 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L45>`_
	
	:Type: :any:`\\OC\\Files\\Storage\\Storage <OC\\Files\\Storage\\Storage>` 


.. php:attr:: public static cache

	:Source:
		`lib/private/Files/Storage/Wrapper/Wrapper.php#47 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L47>`_
	


.. php:attr:: public static scanner

	:Source:
		`lib/private/Files/Storage/Wrapper/Wrapper.php#48 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L48>`_
	


.. php:attr:: public static watcher

	:Source:
		`lib/private/Files/Storage/Wrapper/Wrapper.php#49 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L49>`_
	


.. php:attr:: public static propagator

	:Source:
		`lib/private/Files/Storage/Wrapper/Wrapper.php#50 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L50>`_
	


.. php:attr:: public static updater

	:Source:
		`lib/private/Files/Storage/Wrapper/Wrapper.php#51 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L51>`_
	


Methods
-------

.. rst-class:: public

	.. php:method:: public __construct( $parameters)
	
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#56 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L56>`_
		
		
		:Parameters:
			* **$parameters** (array)  

		
	
	

.. rst-class:: public

	.. php:method:: public getWrapperStorage()
	
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#63 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L63>`_
		
		
		:Returns: :any:`\\OC\\Files\\Storage\\Storage <OC\\Files\\Storage\\Storage>` 
	
	

.. rst-class:: public

	.. php:method:: public getId()
	
		.. rst-class:: phpdoc-description
		
			| Get the identifier for the storage,
			| the returned id should be the same for every storage object that is created with the same parameters
			| and two storage objects with the same id should refer to two storages that display the same files\.
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#74 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L74>`_
		
		
		:Returns: string 
	
	

.. rst-class:: public

	.. php:method:: public mkdir( $path)
	
		.. rst-class:: phpdoc-description
		
			| see https://www\.php\.net/manual/en/function\.mkdir\.php
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#84 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L84>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: bool 
	
	

.. rst-class:: public

	.. php:method:: public rmdir( $path)
	
		.. rst-class:: phpdoc-description
		
			| see https://www\.php\.net/manual/en/function\.rmdir\.php
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#94 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L94>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: bool 
	
	

.. rst-class:: public

	.. php:method:: public opendir( $path)
	
		.. rst-class:: phpdoc-description
		
			| see https://www\.php\.net/manual/en/function\.opendir\.php
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#104 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L104>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: resource | bool 
	
	

.. rst-class:: public

	.. php:method:: public is_dir( $path)
	
		.. rst-class:: phpdoc-description
		
			| see https://www\.php\.net/manual/en/function\.is\_dir\.php
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#114 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L114>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: bool 
	
	

.. rst-class:: public

	.. php:method:: public is_file( $path)
	
		.. rst-class:: phpdoc-description
		
			| see https://www\.php\.net/manual/en/function\.is\_file\.php
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#124 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L124>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: bool 
	
	

.. rst-class:: public

	.. php:method:: public stat( $path)
	
		.. rst-class:: phpdoc-description
		
			| see https://www\.php\.net/manual/en/function\.stat\.php
			| only the following keys are required in the result: size and mtime
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#135 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L135>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: array | bool 
	
	

.. rst-class:: public

	.. php:method:: public filetype( $path)
	
		.. rst-class:: phpdoc-description
		
			| see https://www\.php\.net/manual/en/function\.filetype\.php
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#145 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L145>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: string | bool 
	
	

.. rst-class:: public

	.. php:method:: public filesize( $path)
	
		.. rst-class:: phpdoc-description
		
			| see https://www\.php\.net/manual/en/function\.filesize\.php
			| The result for filesize when called on a folder is required to be 0
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#156 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L156>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: int | bool 
	
	

.. rst-class:: public

	.. php:method:: public isCreatable( $path)
	
		.. rst-class:: phpdoc-description
		
			| check if a file can be created in $path
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#166 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L166>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: bool 
	
	

.. rst-class:: public

	.. php:method:: public isReadable( $path)
	
		.. rst-class:: phpdoc-description
		
			| check if a file can be read
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#176 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L176>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: bool 
	
	

.. rst-class:: public

	.. php:method:: public isUpdatable( $path)
	
		.. rst-class:: phpdoc-description
		
			| check if a file can be written to
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#186 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L186>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: bool 
	
	

.. rst-class:: public

	.. php:method:: public isDeletable( $path)
	
		.. rst-class:: phpdoc-description
		
			| check if a file can be deleted
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#196 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L196>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: bool 
	
	

.. rst-class:: public

	.. php:method:: public isSharable( $path)
	
		.. rst-class:: phpdoc-description
		
			| check if a file can be shared
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#206 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L206>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: bool 
	
	

.. rst-class:: public

	.. php:method:: public getPermissions( $path)
	
		.. rst-class:: phpdoc-description
		
			| get the full permissions of a path\.
			
			| Should return a combination of the PERMISSION\_ constants defined in lib/public/constants\.php
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#217 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L217>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: int 
	
	

.. rst-class:: public

	.. php:method:: public file_exists( $path)
	
		.. rst-class:: phpdoc-description
		
			| see https://www\.php\.net/manual/en/function\.file\_exists\.php
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#227 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L227>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: bool 
	
	

.. rst-class:: public

	.. php:method:: public filemtime( $path)
	
		.. rst-class:: phpdoc-description
		
			| see https://www\.php\.net/manual/en/function\.filemtime\.php
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#237 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L237>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: int | bool 
	
	

.. rst-class:: public

	.. php:method:: public file_get_contents( $path)
	
		.. rst-class:: phpdoc-description
		
			| see https://www\.php\.net/manual/en/function\.file\_get\_contents\.php
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#247 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L247>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: string | bool 
	
	

.. rst-class:: public

	.. php:method:: public file_put_contents( $path, $data)
	
		.. rst-class:: phpdoc-description
		
			| see https://www\.php\.net/manual/en/function\.file\_put\_contents\.php
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#258 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L258>`_
		
		
		:Parameters:
			* **$path** (string)  
			* **$data** (mixed)  

		
		:Returns: int | bool 
	
	

.. rst-class:: public

	.. php:method:: public unlink( $path)
	
		.. rst-class:: phpdoc-description
		
			| see https://www\.php\.net/manual/en/function\.unlink\.php
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#268 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L268>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: bool 
	
	

.. rst-class:: public

	.. php:method:: public rename( $path1, $path2)
	
		.. rst-class:: phpdoc-description
		
			| see https://www\.php\.net/manual/en/function\.rename\.php
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#279 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L279>`_
		
		
		:Parameters:
			* **$path1** (string)  
			* **$path2** (string)  

		
		:Returns: bool 
	
	

.. rst-class:: public

	.. php:method:: public copy( $path1, $path2)
	
		.. rst-class:: phpdoc-description
		
			| see https://www\.php\.net/manual/en/function\.copy\.php
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#290 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L290>`_
		
		
		:Parameters:
			* **$path1** (string)  
			* **$path2** (string)  

		
		:Returns: bool 
	
	

.. rst-class:: public

	.. php:method:: public fopen( $path, $mode)
	
		.. rst-class:: phpdoc-description
		
			| see https://www\.php\.net/manual/en/function\.fopen\.php
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#301 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L301>`_
		
		
		:Parameters:
			* **$path** (string)  
			* **$mode** (string)  

		
		:Returns: resource | bool 
	
	

.. rst-class:: public

	.. php:method:: public getMimeType( $path)
	
		.. rst-class:: phpdoc-description
		
			| get the mimetype for a file or folder
			| The mimetype for a folder is required to be "httpd/unix\-directory"
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#312 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L312>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: string | bool 
	
	

.. rst-class:: public

	.. php:method:: public hash( $type, $path, $raw=false)
	
		.. rst-class:: phpdoc-description
		
			| see https://www\.php\.net/manual/en/function\.hash\.php
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#324 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L324>`_
		
		
		:Parameters:
			* **$type** (string)  
			* **$path** (string)  
			* **$raw** (bool)  

		
		:Returns: string | bool 
	
	

.. rst-class:: public

	.. php:method:: public free_space( $path)
	
		.. rst-class:: phpdoc-description
		
			| see https://www\.php\.net/manual/en/function\.free\_space\.php
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#334 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L334>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: int | bool 
	
	

.. rst-class:: public

	.. php:method:: public search( $query)
	
		.. rst-class:: phpdoc-description
		
			| search for occurrences of $query in file names
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#344 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L344>`_
		
		
		:Parameters:
			* **$query** (string)  

		
		:Returns: array | bool 
	
	

.. rst-class:: public

	.. php:method:: public touch( $path, $mtime=null)
	
		.. rst-class:: phpdoc-description
		
			| see https://www\.php\.net/manual/en/function\.touch\.php
			| If the backend does not support the operation, false should be returned
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#356 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L356>`_
		
		
		:Parameters:
			* **$path** (string)  
			* **$mtime** (int)  

		
		:Returns: bool 
	
	

.. rst-class:: public

	.. php:method:: public getLocalFile( $path)
	
		.. rst-class:: phpdoc-description
		
			| get the path to a local version of the file\.
			
			| The local version of the file can be temporary and doesn\'t have to be persistent across requests
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#367 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L367>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: string | bool 
	
	

.. rst-class:: public

	.. php:method:: public hasUpdated( $path, $time)
	
		.. rst-class:: phpdoc-description
		
			| check if a file or folder has been updated since $time
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#381 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L381>`_
		
		
		:Parameters:
			* **$path** (string)  
			* **$time** (int)  

		
		:Returns: bool hasUpdated for folders should return at least true if a file inside the folder is add, removed or renamed\.
			returning true for other changes in the folder is optional
		
	
	

.. rst-class:: public

	.. php:method:: public getCache( $path="", $storage=null)
	
		.. rst-class:: phpdoc-description
		
			| get a cache instance for the storage
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#392 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L392>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: :any:`\\OC\\Files\\Cache\\Cache <OC\\Files\\Cache\\Cache>` 
	
	

.. rst-class:: public

	.. php:method:: public getScanner( $path="", $storage=null)
	
		.. rst-class:: phpdoc-description
		
			| get a scanner instance for the storage
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#406 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L406>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: :any:`\\OC\\Files\\Cache\\Scanner <OC\\Files\\Cache\\Scanner>` 
	
	

.. rst-class:: public

	.. php:method:: public getOwner( $path)
	
		.. rst-class:: phpdoc-description
		
			| get the user id of the owner of a file or folder
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#420 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L420>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: string 
	
	

.. rst-class:: public

	.. php:method:: public getWatcher( $path="", $storage=null)
	
		.. rst-class:: phpdoc-description
		
			| get a watcher instance for the cache
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#431 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L431>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: :any:`\\OC\\Files\\Cache\\Watcher <OC\\Files\\Cache\\Watcher>` 
	
	

.. rst-class:: public

	.. php:method:: public getPropagator( $storage=null)
	
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#438 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L438>`_
		
		
	
	

.. rst-class:: public

	.. php:method:: public getUpdater( $storage=null)
	
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#445 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L445>`_
		
		
	
	

.. rst-class:: public

	.. php:method:: public getStorageCache()
	
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#455 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L455>`_
		
		
		:Returns: :any:`\\OC\\Files\\Cache\\Storage <OC\\Files\\Cache\\Storage>` 
	
	

.. rst-class:: public

	.. php:method:: public getETag( $path)
	
		.. rst-class:: phpdoc-description
		
			| get the ETag for a file or folder
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#465 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L465>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: string | bool 
	
	

.. rst-class:: public

	.. php:method:: public test()
	
		.. rst-class:: phpdoc-description
		
			| Returns true
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#474 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L474>`_
		
		
		:Returns: bool 
	
	

.. rst-class:: public

	.. php:method:: public isLocal()
	
		.. rst-class:: phpdoc-description
		
			| Returns the wrapped storage\'s value for isLocal\(\)
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#483 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L483>`_
		
		
		:Returns: bool wrapped storage\'s isLocal\(\) value
	
	

.. rst-class:: public

	.. php:method:: public instanceOfStorage( $class)
	
		.. rst-class:: phpdoc-description
		
			| Check if the storage is an instance of $class or is a wrapper for a storage that is an instance of $class
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#493 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L493>`_
		
		
		:Parameters:
			* **$class** (string)  

		
		:Returns: bool 
	
	

.. rst-class:: public

	.. php:method:: public __call( $method, $args)
	
		.. rst-class:: phpdoc-description
		
			| Pass any methods custom to specific storage implementations to the wrapped storage
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#508 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L508>`_
		
		
		:Parameters:
			* **$method** (string)  
			* **$args** (array)  

		
		:Returns: mixed 
	
	

.. rst-class:: public

	.. php:method:: public getDirectDownload( $path)
	
		.. rst-class:: phpdoc-description
		
			| A custom storage implementation can return an url for direct download of a give file\.
			
			| For now the returned array can hold the parameter url \- in future more attributes might follow\.
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#520 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L520>`_
		
		
		:Parameters:
			* **$path** (string)  

		
		:Returns: array | bool 
	
	

.. rst-class:: public

	.. php:method:: public getAvailability()
	
		.. rst-class:: phpdoc-description
		
			| Get availability of the storage
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#529 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L529>`_
		
		
		:Returns: array \[ available, last\_checked \]
	
	

.. rst-class:: public

	.. php:method:: public setAvailability( $isAvailable)
	
		.. rst-class:: phpdoc-description
		
			| Set availability of the storage
			
		
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#538 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L538>`_
		
		
		:Parameters:
			* **$isAvailable** (bool)  

		
	
	

.. rst-class:: public

	.. php:method:: public verifyPath( $path, $fileName)
	
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#548 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L548>`_
		
		
		:Parameters:
			* **$path** (string)  the path of the target folder
			* **$fileName** (string)  the name of the file itself

		
		:Returns: void 
		:Throws: :any:`\\OCP\\Files\\InvalidPathException <OCP\\Files\\InvalidPathException>` 
	
	

.. rst-class:: public

	.. php:method:: public copyFromStorage( $sourceStorage, $sourceInternalPath, $targetInternalPath)
	
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#558 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L558>`_
		
		
		:Parameters:
			* **$sourceStorage** (:any:`OCP\\Files\\Storage\\IStorage <OCP\\Files\\Storage\\IStorage>`)  
			* **$sourceInternalPath** (string)  
			* **$targetInternalPath** (string)  

		
		:Returns: bool 
	
	

.. rst-class:: public

	.. php:method:: public moveFromStorage( $sourceStorage, $sourceInternalPath, $targetInternalPath)
	
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#572 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L572>`_
		
		
		:Parameters:
			* **$sourceStorage** (:any:`OCP\\Files\\Storage\\IStorage <OCP\\Files\\Storage\\IStorage>`)  
			* **$sourceInternalPath** (string)  
			* **$targetInternalPath** (string)  

		
		:Returns: bool 
	
	

.. rst-class:: public

	.. php:method:: public getMetaData( $path)
	
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#580 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L580>`_
		
		
	
	

.. rst-class:: public

	.. php:method:: public acquireLock( $path, $type, $provider)
	
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#590 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L590>`_
		
		
		:Parameters:
			* **$path** (string)  
			* **$type** (int)  \OCP\Lock\ILockingProvider::LOCK_SHARED or \OCP\Lock\ILockingProvider::LOCK_EXCLUSIVE
			* **$provider** (:any:`OCP\\Lock\\ILockingProvider <OCP\\Lock\\ILockingProvider>`)  

		
		:Throws: :any:`\\OCP\\Lock\\LockedException <OCP\\Lock\\LockedException>` 
	
	

.. rst-class:: public

	.. php:method:: public releaseLock( $path, $type, $provider)
	
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#601 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L601>`_
		
		
		:Parameters:
			* **$path** (string)  
			* **$type** (int)  \OCP\Lock\ILockingProvider::LOCK_SHARED or \OCP\Lock\ILockingProvider::LOCK_EXCLUSIVE
			* **$provider** (:any:`OCP\\Lock\\ILockingProvider <OCP\\Lock\\ILockingProvider>`)  

		
	
	

.. rst-class:: public

	.. php:method:: public changeLock( $path, $type, $provider)
	
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#612 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L612>`_
		
		
		:Parameters:
			* **$path** (string)  
			* **$type** (int)  \OCP\Lock\ILockingProvider::LOCK_SHARED or \OCP\Lock\ILockingProvider::LOCK_EXCLUSIVE
			* **$provider** (:any:`OCP\\Lock\\ILockingProvider <OCP\\Lock\\ILockingProvider>`)  

		
	
	

.. rst-class:: public

	.. php:method:: public needsPartFile()
	
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#621 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L621>`_
		
		
		:Returns: bool 
	
	

.. rst-class:: public

	.. php:method:: public writeStream( $path, $stream, $size=null)
	
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#625 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L625>`_
		
		
	
	

.. rst-class:: public

	.. php:method:: public getDirectoryContent( $directory)
	
		:Source:
			`lib/private/Files/Storage/Wrapper/Wrapper.php#639 <https://github.com/nextcloud/server/blob/stable13/lib/private/Files/Storage/Wrapper/Wrapper.php#L639>`_
		
		
	
	

