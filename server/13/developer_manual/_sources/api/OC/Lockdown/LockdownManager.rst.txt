.. rst-class:: phpdoctorst

.. role:: php(code)
	:language: php


LockdownManager
===============


.. php:namespace:: OC\Lockdown

.. php:class:: LockdownManager


	:Source:
		`lib/private/Lockdown/LockdownManager.php#30 <https://github.com/nextcloud/server/blob/stable13/lib/private/Lockdown/LockdownManager.php#L30>`_
	
	:Implements:
		:php:interface:`OCP\\Lockdown\\ILockdownManager` 
	

Properties
----------

Methods
-------

.. rst-class:: public

	.. php:method:: public __construct( $sessionCallback)
	
		.. rst-class:: phpdoc-description
		
			| LockdownManager constructor\.
			
		
		:Source:
			`lib/private/Lockdown/LockdownManager.php#44 <https://github.com/nextcloud/server/blob/stable13/lib/private/Lockdown/LockdownManager.php#L44>`_
		
		
		:Parameters:
			* **$sessionCallback** (callable)  we need to inject the session lazily to avoid dependency loops

		
	
	

.. rst-class:: public

	.. php:method:: public enable()
	
		:Source:
			`lib/private/Lockdown/LockdownManager.php#49 <https://github.com/nextcloud/server/blob/stable13/lib/private/Lockdown/LockdownManager.php#L49>`_
		
		
	
	

.. rst-class:: public

	.. php:method:: public setToken( $token)
	
		:Source:
			`lib/private/Lockdown/LockdownManager.php#72 <https://github.com/nextcloud/server/blob/stable13/lib/private/Lockdown/LockdownManager.php#L72>`_
		
		
	
	

.. rst-class:: public

	.. php:method:: public canAccessFilesystem()
	
		:Source:
			`lib/private/Lockdown/LockdownManager.php#79 <https://github.com/nextcloud/server/blob/stable13/lib/private/Lockdown/LockdownManager.php#L79>`_
		
		
	
	

