.. rst-class:: phpdoctorst

.. role:: php(code)
	:language: php


IManager
========


.. php:namespace:: OCP\Contacts

.. php:interface:: IManager


	.. rst-class:: phpdoc-description
	
		| This class provides access to the contacts app\. Use this class exclusively if you want to access contacts\.
		
		| Contacts in general will be expressed as an array of key\-value\-pairs\.
		| The keys will match the property names defined in https://tools\.ietf\.org/html/rfc2426\#section\-1
		| 
		| Proposed workflow for working with contacts:
		|  \- search for the contacts
		|  \- manipulate the results array
		|  \- createOrUpdate will save the given contacts overwriting the existing data
		| 
		| For updating it is mandatory to keep the id\.
		| Without an id a new contact will be created\.
		
	
	:Implemented by:
		:php:class:`OC\\ContactsManager` 
	
	
	:Source:
		`lib/public/Contacts/IManager.php#56 <https://github.com/nextcloud/server/blob/stable13/lib/public/Contacts/IManager.php#L56>`_
	

Methods
-------

.. rst-class:: public

	.. php:method:: public search( $pattern, $searchProperties=\[\], $options=\[\])
	
		.. rst-class:: phpdoc-description
		
			| This function is used to search and find contacts within the users address books\.
			
			| In case $pattern is empty all contacts will be returned\.
			| 
			| Example:
			|  Following function shows how to search for contacts for the name and the email address\.
			| 
			| 	public static function getMatchingRecipient\($term\) \{
			| 		$cm = \\OC::$server\-\>getContactsManager\(\);
			| 		// The API is not active \-\> nothing to do
			| 		if \(\!$cm\-\>isEnabled\(\)\) \{
			| 			return array\(\);
			| 		\}
			| 
			| 		$result = $cm\-\>search\($term, array\(\'FN\', \'EMAIL\'\)\);
			| 		$receivers = array\(\);
			| 		foreach \($result as $r\) \{
			| 			$id = $r\[\'id\'\];
			| 			$fn = $r\[\'FN\'\];
			| 			$email = $r\[\'EMAIL\'\];
			| 			if \(\!is\_array\($email\)\) \{
			| 				$email = array\($email\);
			| 			\}
			| 
			| 			// loop through all email addresses of this contact
			| 			foreach \($email as $e\) \{
			| 			$displayName = $fn \. " <$e\>";
			| 			$receivers\[\] = array\(
			| 				\'id\'    =\> $id,
			| 				\'label\' =\> $displayName,
			| 				\'value\' =\> $displayName\);
			| 			\}
			| 		\}
			| 
			| 		return $receivers;
			| 	\}
			
		
		:Source:
			`lib/public/Contacts/IManager.php#105 <https://github.com/nextcloud/server/blob/stable13/lib/public/Contacts/IManager.php#L105>`_
		
		
		:Parameters:
			* **$pattern** (string)  which should match within the $searchProperties
			* **$searchProperties** (array)  defines the properties within the query pattern should match
			* **$options** (array)  = array() to define the search behavior
			- 'escape_like_param' - If set to false wildcards _ and % are not escaped
			- 'limit' - Set a numeric limit for the search results
			- 'offset' - Set the offset for the limited search results

		
		:Returns: array an array of contacts which are arrays of key\-value\-pairs
		:Since: 6.0.0 
	
	

.. rst-class:: public

	.. php:method:: public delete( $id, $address_book_key)
	
		.. rst-class:: phpdoc-description
		
			| This function can be used to delete the contact identified by the given id
			
		
		:Source:
			`lib/public/Contacts/IManager.php#115 <https://github.com/nextcloud/server/blob/stable13/lib/public/Contacts/IManager.php#L115>`_
		
		
		:Parameters:
			* **$id** (object)  the unique identifier to a contact
			* **$address_book_key** (string)  identifier of the address book in which the contact shall be deleted

		
		:Returns: bool successful or not
		:Since: 6.0.0 
	
	

.. rst-class:: public

	.. php:method:: public createOrUpdate( $properties, $address_book_key)
	
		.. rst-class:: phpdoc-description
		
			| This function is used to create a new contact if \'id\' is not given or not present\.
			
			| Otherwise the contact will be updated by replacing the entire data set\.
			
		
		:Source:
			`lib/public/Contacts/IManager.php#126 <https://github.com/nextcloud/server/blob/stable13/lib/public/Contacts/IManager.php#L126>`_
		
		
		:Parameters:
			* **$properties** (array)  this array if key-value-pairs defines a contact
			* **$address_book_key** (string)  identifier of the address book in which the contact shall be created or updated

		
		:Returns: array an array representing the contact just created or updated
		:Since: 6.0.0 
	
	

.. rst-class:: public

	.. php:method:: public isEnabled()
	
		.. rst-class:: phpdoc-description
		
			| Check if contacts are available \(e\.g\. contacts app enabled\)
			
		
		:Source:
			`lib/public/Contacts/IManager.php#134 <https://github.com/nextcloud/server/blob/stable13/lib/public/Contacts/IManager.php#L134>`_
		
		
		:Returns: bool true if enabled, false if not
		:Since: 6.0.0 
	
	

.. rst-class:: public

	.. php:method:: public registerAddressBook( $address_book)
	
		.. rst-class:: phpdoc-description
		
			| Registers an address book
			
		
		:Source:
			`lib/public/Contacts/IManager.php#143 <https://github.com/nextcloud/server/blob/stable13/lib/public/Contacts/IManager.php#L143>`_
		
		
		:Parameters:
			* **$address_book** (:any:`OCP\\IAddressBook <OCP\\IAddressBook>`)  

		
		:Returns: void 
		:Since: 6.0.0 
	
	

.. rst-class:: public

	.. php:method:: public unregisterAddressBook( $address_book)
	
		.. rst-class:: phpdoc-description
		
			| Unregisters an address book
			
		
		:Source:
			`lib/public/Contacts/IManager.php#152 <https://github.com/nextcloud/server/blob/stable13/lib/public/Contacts/IManager.php#L152>`_
		
		
		:Parameters:
			* **$address_book** (:any:`OCP\\IAddressBook <OCP\\IAddressBook>`)  

		
		:Returns: void 
		:Since: 6.0.0 
	
	

.. rst-class:: public

	.. php:method:: public register( $callable)
	
		.. rst-class:: phpdoc-description
		
			| In order to improve lazy loading a closure can be registered which will be called in case
			| address books are actually requested
			
		
		:Source:
			`lib/public/Contacts/IManager.php#162 <https://github.com/nextcloud/server/blob/stable13/lib/public/Contacts/IManager.php#L162>`_
		
		
		:Parameters:
			* **$callable** (:any:`Closure <Closure>`)  

		
		:Returns: void 
		:Since: 6.0.0 
	
	

.. rst-class:: public deprecated

	.. php:method:: public getAddressBooks()
	
		.. rst-class:: phpdoc-description
		
			| Return a list of the user\'s addressbooks display names
			
		
		:Source:
			`lib/public/Contacts/IManager.php#171 <https://github.com/nextcloud/server/blob/stable13/lib/public/Contacts/IManager.php#L171>`_
		
		
		:Returns: array 
		:Since: 6.0.0 
		:Deprecated: 16.0.0 \- Use \`$this\-\>getUserAddressBooks\(\)\` instead
	
	

.. rst-class:: public

	.. php:method:: public getUserAddressBooks()
	
		.. rst-class:: phpdoc-description
		
			| Return a list of the user\'s addressbooks
			
		
		:Source:
			`lib/public/Contacts/IManager.php#179 <https://github.com/nextcloud/server/blob/stable13/lib/public/Contacts/IManager.php#L179>`_
		
		
		:Returns: :any:`\\OCP\\IAddressBook\[\] <OCP\\IAddressBook>` 
		:Since: 16.0.0 
	
	

.. rst-class:: public

	.. php:method:: public clear()
	
		.. rst-class:: phpdoc-description
		
			| removes all registered address book instances
			
		
		:Source:
			`lib/public/Contacts/IManager.php#187 <https://github.com/nextcloud/server/blob/stable13/lib/public/Contacts/IManager.php#L187>`_
		
		
		:Returns: void 
		:Since: 6.0.0 
	
	

