.. rst-class:: phpdoctorst

.. role:: php(code)
	:language: php


ICommentsManager
================


.. php:namespace:: OCP\Comments

.. php:interface:: ICommentsManager


	.. rst-class:: phpdoc-description
	
		| Interface ICommentsManager
		
		| This class manages the access to comments
		
	
	:Implemented by:
		:php:class:`OC\\Comments\\Manager` 
	
	
	:Source:
		`lib/public/Comments/ICommentsManager.php#41 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L41>`_
	

Constants
---------

.. php:const:: DELETED_USER = deleted\_users

	:Source:
		`lib/public/Comments/ICommentsManager.php#52 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L52>`_
	
	:See: :any:`\\OCP\\Comments\\deleteReferencesOfActor <OCP\\Comments\\deleteReferencesOfActor>` 
	:Since: 9.0.0 To be used as replacement for user type actors in deleteReferencesOfActor\(\)\.
		
		User interfaces shall show "Deleted user" as display name, if needed\.
	


Methods
-------

.. rst-class:: public

	.. php:method:: public get( $id)
	
		.. rst-class:: phpdoc-description
		
			| returns a comment instance
			
		
		:Source:
			`lib/public/Comments/ICommentsManager.php#62 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L62>`_
		
		
		:Parameters:
			* **$id** (string)  the ID of the comment

		
		:Returns: :any:`\\OCP\\Comments\\IComment <OCP\\Comments\\IComment>` 
		:Throws: :any:`\\OCP\\Comments\\NotFoundException <OCP\\Comments\\NotFoundException>` 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getTree( $id, $limit=0, $offset=0)
	
		.. rst-class:: phpdoc-description
		
			| returns the comment specified by the id and all it\'s child comments
			
		
		:Source:
			`lib/public/Comments/ICommentsManager.php#100 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L100>`_
		
		
		:Parameters:
			* **$id** (string)  
			* **$limit** (int)  max number of entries to return, 0 returns all
			* **$offset** (int)  the start entry

		
		:Returns: array 
		:Since: 9.0.0 The return array looks like this
			\[
				 \'comment\' =\> IComment, // root comment
			  \'replies\' =\>
			  \[
			    0 =\>
			    \[
			      \'comment\' =\> IComment,
			      \'replies\' =\>
			      \[
			        0 =\>
			        \[
			          \'comment\' =\> IComment,
			          \'replies\' =\> \[ … \]
			        \],
			        …
			      \]
			    \]
			    1 =\>
			    \[
			      \'comment\' =\> IComment,
			      \'replies\'=\> \[ … \]
			    \],
			    …
			  \]
			\]
		
	
	

.. rst-class:: public

	.. php:method:: public getForObject( $objectType, $objectId, $limit=0, $offset=0, $notOlderThan=null)
	
		.. rst-class:: phpdoc-description
		
			| returns comments for a specific object \(e\.g\. a file\)\.
			
			| The sort order is always newest to oldest\.
			
		
		:Source:
			`lib/public/Comments/ICommentsManager.php#117 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L117>`_
		
		
		:Parameters:
			* **$objectType** (string)  the object type, e.g. 'files'
			* **$objectId** (string)  the id of the object
			* **$limit** (int)  optional, number of maximum comments to be returned. if
			not specified, all comments are returned.
			* **$offset** (int)  optional, starting point
			* **$notOlderThan** (:any:`DateTime <DateTime>` | null)  optional, timestamp of the oldest comments
			that may be returned

		
		:Returns: :any:`\\OCP\\Comments\\IComment\[\] <OCP\\Comments\\IComment>` 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getForObjectSince( $objectType, $objectId, $lastKnownCommentId, $sortDirection=asc, $limit=30, $includeLastKnown=false)
	
		:Source:
			`lib/public/Comments/ICommentsManager.php#136 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L136>`_
		
		
		:Parameters:
			* **$objectType** (string)  the object type, e.g. 'files'
			* **$objectId** (string)  the id of the object
			* **$lastKnownCommentId** (int)  the last known comment (will be used as offset)
			* **$sortDirection** (string)  direction of the comments (`asc` or `desc`)
			* **$limit** (int)  optional, number of maximum comments to be returned. if
			set to 0, all comments are returned.
			* **$includeLastKnown** (bool)  

		
		:Returns: :any:`\\OCP\\Comments\\IComment\[\] <OCP\\Comments\\IComment>` 
		:Since: 14.0.0 
	
	

.. rst-class:: public

	.. php:method:: public search( $search, $objectType, $objectId, $verb, $offset, $limit=50)
	
		.. rst-class:: phpdoc-description
		
			| Search for comments with a given content
			
		
		:Source:
			`lib/public/Comments/ICommentsManager.php#157 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L157>`_
		
		
		:Parameters:
			* **$search** (string)  content to search for
			* **$objectType** (string)  Limit the search by object type
			* **$objectId** (string)  Limit the search by object id
			* **$verb** (string)  Limit the verb of the comment
			* **$offset** (int)  
			* **$limit** (int)  

		
		:Returns: :any:`\\OCP\\Comments\\IComment\[\] <OCP\\Comments\\IComment>` 
		:Since: 14.0.0 
	
	

.. rst-class:: public

	.. php:method:: public searchForObjects( $search, $objectType, $objectIds, $verb, $offset, $limit=50)
	
		.. rst-class:: phpdoc-description
		
			| Search for comments on one or more objects with a given content
			
		
		:Source:
			`lib/public/Comments/ICommentsManager.php#171 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L171>`_
		
		
		:Parameters:
			* **$search** (string)  content to search for
			* **$objectType** (string)  Limit the search by object type
			* **$objectIds** (array)  Limit the search by object ids
			* **$verb** (string)  Limit the verb of the comment
			* **$offset** (int)  
			* **$limit** (int)  

		
		:Returns: :any:`\\OCP\\Comments\\IComment\[\] <OCP\\Comments\\IComment>` 
		:Since: 21.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getNumberOfCommentsForObject( $objectType, $objectId, $notOlderThan=null, $verb="")
	
		:Source:
			`lib/public/Comments/ICommentsManager.php#182 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L182>`_
		
		
		:Parameters:
			* **$objectType**  string the object type, e.g. 'files'
			* **$objectId**  string the id of the object
			* **$notOlderThan** (:any:`DateTime <DateTime>` | null)  optional, timestamp of the oldest comments
			that may be returned
			* **$verb** (string)  Limit the verb of the comment - Added in 14.0.0

		
		:Returns: int 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getNumberOfUnreadCommentsForObjects( $objectType, $objectIds, $user, $verb="")
	
		:Source:
			`lib/public/Comments/ICommentsManager.php#193 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L193>`_
		
		
		:Parameters:
			* **$objectType** (string)  the object type, e.g. 'files'
			* **$objectIds** (string[])  the id of the object
			* **$user** (:any:`OCP\\IUser <OCP\\IUser>`)  
			* **$verb** (string)  Limit the verb of the comment - Added in 14.0.0

		
		:Returns: array Map with object id =\> \# of unread comments
		:Since: 21.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getNumberOfCommentsForObjectSinceComment( $objectType, $objectId, $lastRead, $verb="")
	
		:Source:
			`lib/public/Comments/ICommentsManager.php#203 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L203>`_
		
		
		:Parameters:
			* **$objectType** (string)  
			* **$objectId** (string)  
			* **$lastRead** (int)  
			* **$verb** (string)  

		
		:Returns: int 
		:Since: 21.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getLastCommentBeforeDate( $objectType, $objectId, $beforeDate, $verb="")
	
		:Source:
			`lib/public/Comments/ICommentsManager.php#213 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L213>`_
		
		
		:Parameters:
			* **$objectType** (string)  
			* **$objectId** (string)  
			* **$beforeDate** (:any:`DateTime <DateTime>`)  
			* **$verb** (string)  

		
		:Returns: int 
		:Since: 21.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getLastCommentDateByActor( $objectType, $objectId, $verb, $actorType, $actors)
	
		:Source:
			`lib/public/Comments/ICommentsManager.php#225 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L225>`_
		
		
		:Parameters:
			* **$objectType** (string)  
			* **$objectId** (string)  
			* **$verb** (string)  
			* **$actorType** (string)  
			* **$actors** (string[])  

		
		:Returns: :any:`\\DateTime\[\] <DateTime>` Map of "string actor" =\> "\\DateTime most recent comment date"
		:Since: 21.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getNumberOfUnreadCommentsForFolder( $folderId, $user)
	
		.. rst-class:: phpdoc-description
		
			| Get the number of unread comments for all files in a folder
			
		
		:Source:
			`lib/public/Comments/ICommentsManager.php#241 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L241>`_
		
		
		:Parameters:
			* **$folderId** (int)  
			* **$user** (:any:`OCP\\IUser <OCP\\IUser>`)  

		
		:Returns: array \[$fileId =\> $unreadCount\]
		:Since: 12.0.0 
	
	

.. rst-class:: public

	.. php:method:: public create( $actorType, $actorId, $objectType, $objectId)
	
		.. rst-class:: phpdoc-description
		
			| creates a new comment and returns it\. At this point of time, it is not
			| saved in the used data storage\. Use save\(\) after setting other fields
			| of the comment \(e\.g\. message or verb\)\.
			
		
		:Source:
			`lib/public/Comments/ICommentsManager.php#255 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L255>`_
		
		
		:Parameters:
			* **$actorType** (string)  the actor type (e.g. 'users')
			* **$actorId** (string)  a user id
			* **$objectType** (string)  the object type the comment is attached to
			* **$objectId** (string)  the object id the comment is attached to

		
		:Returns: :any:`\\OCP\\Comments\\IComment <OCP\\Comments\\IComment>` 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public delete( $id)
	
		.. rst-class:: phpdoc-description
		
			| permanently deletes the comment specified by the ID
			
			| When the comment has child comments, their parent ID will be changed to
			| the parent ID of the item that is to be deleted\.
			
		
		:Source:
			`lib/public/Comments/ICommentsManager.php#267 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L267>`_
		
		
		:Parameters:
			* **$id** (string)  

		
		:Returns: bool 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public save( $comment)
	
		.. rst-class:: phpdoc-description
		
			| saves the comment permanently
			
			| if the supplied comment has an empty ID, a new entry comment will be
			| saved and the instance updated with the new ID\.
			| 
			| Otherwise, an existing comment will be updated\.
			| 
			| Throws NotFoundException when a comment that is to be updated does not
			| exist anymore at this point of time\.
			
		
		:Source:
			`lib/public/Comments/ICommentsManager.php#285 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L285>`_
		
		
		:Parameters:
			* **$comment** (:any:`OCP\\Comments\\IComment <OCP\\Comments\\IComment>`)  

		
		:Returns: bool 
		:Throws: :any:`\\OCP\\Comments\\NotFoundException <OCP\\Comments\\NotFoundException>` 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public deleteReferencesOfActor( $actorType, $actorId)
	
		.. rst-class:: phpdoc-description
		
			| removes references to specific actor \(e\.g\. on user delete\) of a comment\.
			
			| The comment itself must not get lost/deleted\.
			| 
			| A \'users\' type actor \(type and id\) should get replaced by the
			| value of the DELETED\_USER constant of this interface\.
			
		
		:Source:
			`lib/public/Comments/ICommentsManager.php#299 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L299>`_
		
		
		:Parameters:
			* **$actorType** (string)  the actor type (e.g. 'users')
			* **$actorId** (string)  a user id

		
		:Returns: bool 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public deleteCommentsAtObject( $objectType, $objectId)
	
		.. rst-class:: phpdoc-description
		
			| deletes all comments made of a specific object \(e\.g\. on file delete\)
			
		
		:Source:
			`lib/public/Comments/ICommentsManager.php#309 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L309>`_
		
		
		:Parameters:
			* **$objectType** (string)  the object type (e.g. 'files')
			* **$objectId** (string)  e.g. the file id

		
		:Returns: bool 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public setReadMark( $objectType, $objectId, $dateTime, $user)
	
		.. rst-class:: phpdoc-description
		
			| sets the read marker for a given file to the specified date for the
			| provided user
			
		
		:Source:
			`lib/public/Comments/ICommentsManager.php#321 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L321>`_
		
		
		:Parameters:
			* **$objectType** (string)  
			* **$objectId** (string)  
			* **$dateTime** (:any:`DateTime <DateTime>`)  
			* **$user** (:any:`OCP\\IUser <OCP\\IUser>`)  

		
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public getReadMark( $objectType, $objectId, $user)
	
		.. rst-class:: phpdoc-description
		
			| returns the read marker for a given file to the specified date for the
			| provided user\. It returns null, when the marker is not present, i\.e\.
			
			| no comments were marked as read\.
			
		
		:Source:
			`lib/public/Comments/ICommentsManager.php#334 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L334>`_
		
		
		:Parameters:
			* **$objectType** (string)  
			* **$objectId** (string)  
			* **$user** (:any:`OCP\\IUser <OCP\\IUser>`)  

		
		:Returns: :any:`\\DateTime <DateTime>` | null 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public deleteReadMarksFromUser( $user)
	
		.. rst-class:: phpdoc-description
		
			| deletes the read markers for the specified user
			
		
		:Source:
			`lib/public/Comments/ICommentsManager.php#343 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L343>`_
		
		
		:Parameters:
			* **$user** (:any:`OCP\\IUser <OCP\\IUser>`)  

		
		:Returns: bool 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public deleteReadMarksOnObject( $objectType, $objectId)
	
		.. rst-class:: phpdoc-description
		
			| deletes the read markers on the specified object
			
		
		:Source:
			`lib/public/Comments/ICommentsManager.php#353 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L353>`_
		
		
		:Parameters:
			* **$objectType** (string)  
			* **$objectId** (string)  

		
		:Returns: bool 
		:Since: 9.0.0 
	
	

.. rst-class:: public

	.. php:method:: public registerEventHandler( $closure)
	
		.. rst-class:: phpdoc-description
		
			| registers an Entity to the manager, so event notifications can be send
			| to consumers of the comments infrastructure
			
		
		:Source:
			`lib/public/Comments/ICommentsManager.php#362 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L362>`_
		
		
		:Parameters:
			* **$closure** (:any:`Closure <Closure>`)  

		
		:Since: 11.0.0 
	
	

.. rst-class:: public

	.. php:method:: public registerDisplayNameResolver( $type, $closure)
	
		.. rst-class:: phpdoc-description
		
			| registers a method that resolves an ID to a display name for a given type
			
		
		:Source:
			`lib/public/Comments/ICommentsManager.php#375 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L375>`_
		
		
		:Parameters:
			* **$type** (string)  
			* **$closure** (:any:`Closure <Closure>`)  

		
		:Throws: :any:`\\OutOfBoundsException <OutOfBoundsException>` 
		:Since: 11.0.0 Only one resolver shall be registered per type\. Otherwise a
			\\OutOfBoundsException has to thrown\.
		
	
	

.. rst-class:: public

	.. php:method:: public resolveDisplayName( $type, $id)
	
		.. rst-class:: phpdoc-description
		
			| resolves a given ID of a given Type to a display name\.
			
		
		:Source:
			`lib/public/Comments/ICommentsManager.php#390 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L390>`_
		
		
		:Parameters:
			* **$type** (string)  
			* **$id** (string)  

		
		:Returns: string 
		:Throws: :any:`\\OutOfBoundsException <OutOfBoundsException>` 
		:Since: 11.0.0 If a provided type was not registered, an \\OutOfBoundsException shall
			be thrown\. It is upon the resolver discretion what to return of the
			provided ID is unknown\. It must be ensured that a string is returned\.
		
	
	

.. rst-class:: public

	.. php:method:: public load()
	
		.. rst-class:: phpdoc-description
		
			| Load the Comments app into the page
			
		
		:Source:
			`lib/public/Comments/ICommentsManager.php#397 <https://github.com/nextcloud/server/blob/stable13/lib/public/Comments/ICommentsManager.php#L397>`_
		
		
		:Since: 21.0.0 
	
	

