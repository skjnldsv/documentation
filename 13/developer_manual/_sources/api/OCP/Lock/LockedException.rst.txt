.. rst-class:: phpdoctorst

.. role:: php(code)
	:language: php


LockedException
===============


.. php:namespace:: OCP\Lock

.. php:class:: LockedException


	.. rst-class:: phpdoc-description
	
		| Class LockedException
		
	
	:Source:
		`lib/public/Lock/LockedException.php#37 <https://github.com/nextcloud/server/blob/stable13/lib/public/Lock/LockedException.php#L37>`_
	
	:Parent:
		:php:class:`Exception`
	

Properties
----------

Methods
-------

.. rst-class:: public

	.. php:method:: public __construct( $path, $previous=null, $existingLock=null, $readablePath=null)
	
		.. rst-class:: phpdoc-description
		
			| LockedException constructor\.
			
		
		:Source:
			`lib/public/Lock/LockedException.php#58 <https://github.com/nextcloud/server/blob/stable13/lib/public/Lock/LockedException.php#L58>`_
		
		
		:Parameters:
			* **$path** (string)  locked path
			* **$previous** (:any:`Exception <Exception>` | null)  previous exception for cascading
			* **$existingLock** (string)  since 14.0.0
			* **$readablePath** (string)  since 20.0.0

		
		:Since: 8.1.0 
	
	

.. rst-class:: public

	.. php:method:: public getPath()
	
		:Source:
			`lib/public/Lock/LockedException.php#76 <https://github.com/nextcloud/server/blob/stable13/lib/public/Lock/LockedException.php#L76>`_
		
		
		:Returns: string 
		:Since: 8.1.0 
	
	

.. rst-class:: public

	.. php:method:: public getExistingLock()
	
		:Source:
			`lib/public/Lock/LockedException.php#84 <https://github.com/nextcloud/server/blob/stable13/lib/public/Lock/LockedException.php#L84>`_
		
		
		:Returns: string 
		:Since: 19.0.0 
	
	

